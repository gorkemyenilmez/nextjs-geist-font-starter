{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OAC8D;IACjE,qBACE,6LAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAbS;AAeT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS","debugId":null}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 407, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 439, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"peer border-input dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"flex items-center justify-center text-current transition-none\"\n      >\n        <CheckIcon className=\"size-3.5\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  )\n}\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACiD;IACpD,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+eACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;sBAEV,cAAA,6LAAC,2MAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI7B;KArBS","debugId":null}},
    {"offset": {"line": 524, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator-root\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACkD;IACrD,qBACE,6LAAC,wKAAA,CAAA,OAAuB;QACtB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAGf;KAlBS","debugId":null}},
    {"offset": {"line": 560, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/database-connection.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Separator } from '@/components/ui/separator';\nimport { DatabaseConfig, DatabaseConnectionStatus } from '@/lib/db/types';\n\ninterface DatabaseConnectionProps {\n  onConnectionSuccess: (status: DatabaseConnectionStatus) => void;\n  currentStatus: DatabaseConnectionStatus;\n}\n\nexport default function DatabaseConnection({ onConnectionSuccess, currentStatus }: DatabaseConnectionProps) {\n  const [config, setConfig] = useState<DatabaseConfig>({\n    server: 'localhost',\n    database: '',\n    user: '',\n    password: '',\n    port: 1433,\n    options: {\n      encrypt: true,\n      trustServerCertificate: true\n    }\n  });\n\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [showAdvanced, setShowAdvanced] = useState(false);\n\n  const handleInputChange = (field: keyof DatabaseConfig, value: any) => {\n    setConfig(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    setError(null);\n  };\n\n  const handleOptionsChange = (field: string, value: boolean) => {\n    setConfig(prev => ({\n      ...prev,\n      options: {\n        ...prev.options,\n        [field]: value\n      }\n    }));\n  };\n\n  const handleConnect = async () => {\n    if (!config.server || !config.database || !config.user || !config.password) {\n      setError('Lütfen tüm gerekli alanları doldurun');\n      return;\n    }\n\n    setIsConnecting(true);\n    setError(null);\n\n    try {\n      const response = await fetch('/api/analyze', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(config),\n      });\n\n      const result = await response.json();\n\n      if (result.success) {\n        const connectionStatus: DatabaseConnectionStatus = {\n          isConnected: true,\n          serverName: config.server,\n          databaseName: config.database,\n          lastConnectionTime: new Date()\n        };\n        \n        onConnectionSuccess(connectionStatus);\n        setError(null);\n      } else {\n        setError(result.error || 'Bağlantı kurulamadı');\n      }\n    } catch (error) {\n      setError(`Bağlantı hatası: ${error}`);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  const handleDisconnect = async () => {\n    // Bağlantıyı kapat (backend'de disconnect fonksiyonu eklenebilir)\n    onConnectionSuccess({\n      isConnected: false\n    });\n  };\n\n  const loadSampleConfig = () => {\n    setConfig({\n      server: 'localhost\\\\SQLEXPRESS',\n      database: 'LOGO_DB',\n      user: 'sa',\n      password: '',\n      port: 1433,\n      options: {\n        encrypt: true,\n        trustServerCertificate: true\n      }\n    });\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Mevcut Bağlantı Durumu */}\n      {currentStatus.isConnected && (\n        <Alert className=\"border-green-200 bg-green-50\">\n          <AlertDescription className=\"text-green-800\">\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <strong>Bağlantı Aktif:</strong> {currentStatus.serverName} / {currentStatus.databaseName}\n                {currentStatus.lastConnectionTime && (\n                  <div className=\"text-sm mt-1\">\n                    Son bağlantı: {currentStatus.lastConnectionTime.toLocaleString('tr-TR')}\n                  </div>\n                )}\n              </div>\n              <Button \n                variant=\"outline\" \n                size=\"sm\" \n                onClick={handleDisconnect}\n                className=\"text-red-600 border-red-300 hover:bg-red-50\"\n              >\n                Bağlantıyı Kes\n              </Button>\n            </div>\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Bağlantı Formu */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Bağlantı Bilgileri</CardTitle>\n            <CardDescription>\n              SQL Server veritabanı bağlantı parametrelerini girin\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"server\">Sunucu Adı *</Label>\n                <Input\n                  id=\"server\"\n                  placeholder=\"localhost\\\\SQLEXPRESS\"\n                  value={config.server}\n                  onChange={(e) => handleInputChange('server', e.target.value)}\n                  disabled={isConnecting}\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"port\">Port</Label>\n                <Input\n                  id=\"port\"\n                  type=\"number\"\n                  placeholder=\"1433\"\n                  value={config.port}\n                  onChange={(e) => handleInputChange('port', parseInt(e.target.value) || 1433)}\n                  disabled={isConnecting}\n                />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"database\">Veritabanı Adı *</Label>\n              <Input\n                id=\"database\"\n                placeholder=\"LOGO_DB\"\n                value={config.database}\n                onChange={(e) => handleInputChange('database', e.target.value)}\n                disabled={isConnecting}\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"user\">Kullanıcı Adı *</Label>\n                <Input\n                  id=\"user\"\n                  placeholder=\"sa\"\n                  value={config.user}\n                  onChange={(e) => handleInputChange('user', e.target.value)}\n                  disabled={isConnecting}\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"password\">Şifre *</Label>\n                <Input\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder=\"••••••••\"\n                  value={config.password}\n                  onChange={(e) => handleInputChange('password', e.target.value)}\n                  disabled={isConnecting}\n                />\n              </div>\n            </div>\n\n            {/* Gelişmiş Ayarlar */}\n            <div className=\"space-y-4\">\n              <Button\n                type=\"button\"\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setShowAdvanced(!showAdvanced)}\n                className=\"text-blue-600\"\n              >\n                {showAdvanced ? 'Gelişmiş Ayarları Gizle' : 'Gelişmiş Ayarları Göster'}\n              </Button>\n\n              {showAdvanced && (\n                <div className=\"space-y-4 p-4 bg-gray-50 rounded-lg\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id=\"encrypt\"\n                      checked={config.options?.encrypt || false}\n                      onCheckedChange={(checked) => handleOptionsChange('encrypt', checked as boolean)}\n                    />\n                    <Label htmlFor=\"encrypt\" className=\"text-sm\">\n                      Şifreli bağlantı kullan\n                    </Label>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id=\"trustServerCertificate\"\n                      checked={config.options?.trustServerCertificate || false}\n                      onCheckedChange={(checked) => handleOptionsChange('trustServerCertificate', checked as boolean)}\n                    />\n                    <Label htmlFor=\"trustServerCertificate\" className=\"text-sm\">\n                      Sunucu sertifikasına güven\n                    </Label>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {error && (\n              <Alert className=\"border-red-200 bg-red-50\">\n                <AlertDescription className=\"text-red-800\">\n                  {error}\n                </AlertDescription>\n              </Alert>\n            )}\n\n            <div className=\"flex space-x-2\">\n              <Button\n                onClick={handleConnect}\n                disabled={isConnecting || currentStatus.isConnected}\n                className=\"flex-1\"\n              >\n                {isConnecting ? 'Bağlanıyor...' : 'Bağlan'}\n              </Button>\n              \n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={loadSampleConfig}\n                disabled={isConnecting}\n              >\n                Örnek Yükle\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Yardım ve Örnekler */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Bağlantı Yardımı</CardTitle>\n            <CardDescription>\n              Yaygın bağlantı örnekleri ve sorun giderme\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div>\n              <h4 className=\"font-medium text-sm mb-2\">Yaygın Sunucu Adları:</h4>\n              <ul className=\"text-sm text-gray-600 space-y-1\">\n                <li>• <code>localhost</code> - Yerel makine</li>\n                <li>• <code>localhost\\\\SQLEXPRESS</code> - SQL Server Express</li>\n                <li>• <code>192.168.1.100</code> - IP adresi</li>\n                <li>• <code>server.domain.com</code> - Domain adı</li>\n              </ul>\n            </div>\n\n            <Separator />\n\n            <div>\n              <h4 className=\"font-medium text-sm mb-2\">LOGO Yazılım Veritabanları:</h4>\n              <ul className=\"text-sm text-gray-600 space-y-1\">\n                <li>• <code>LOGO_FIRM001</code> - Firma veritabanı</li>\n                <li>• <code>LOGO_GENEL</code> - Genel veritabanı</li>\n                <li>• <code>TIGER_DB</code> - Tiger veritabanı</li>\n                <li>• <code>GO3_DB</code> - GO3 veritabanı</li>\n              </ul>\n            </div>\n\n            <Separator />\n\n            <div>\n              <h4 className=\"font-medium text-sm mb-2\">Sorun Giderme:</h4>\n              <ul className=\"text-sm text-gray-600 space-y-1\">\n                <li>• SQL Server servisinin çalıştığından emin olun</li>\n                <li>• Windows Authentication kullanıyorsanız kullanıcı adını boş bırakın</li>\n                <li>• Firewall ayarlarını kontrol edin</li>\n                <li>• TCP/IP protokolünün etkin olduğundan emin olun</li>\n              </ul>\n            </div>\n\n            <Alert>\n              <AlertDescription className=\"text-sm\">\n                <strong>Güvenlik Notu:</strong> Bağlantı bilgileri sadece bu oturum için saklanır ve güvenli şekilde iletilir.\n              </AlertDescription>\n            </Alert>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1403, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE;KArBS","debugId":null}},
    {"offset": {"line": 1448, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,6LAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;KAbS;AAeT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 1586, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/analysis-dashboard.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Separator } from '@/components/ui/separator';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { PerformanceAnalysisResult } from '@/lib/db/types';\nimport { format } from 'date-fns';\nimport { tr } from 'date-fns/locale';\n\ninterface AnalysisDashboardProps {\n  onAnalysisComplete: (result: PerformanceAnalysisResult) => void;\n  analysisResult: PerformanceAnalysisResult | null;\n}\n\nexport default function AnalysisDashboard({ onAnalysisComplete, analysisResult }: AnalysisDashboardProps) {\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const runAnalysis = async () => {\n    setIsAnalyzing(true);\n    setError(null);\n\n    try {\n      const response = await fetch('/api/analyze', {\n        method: 'GET',\n      });\n\n      const result = await response.json();\n\n      if (result.success && result.data) {\n        onAnalysisComplete(result.data);\n      } else {\n        setError(result.error || 'Analiz başarısız oldu');\n      }\n    } catch (error) {\n      setError(`Analiz hatası: ${error}`);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  const formatBytes = (bytes: number) => {\n    if (bytes === 0) return '0 B';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const getScoreColor = (score: number) => {\n    if (score >= 80) return 'bg-green-500';\n    if (score >= 60) return 'bg-yellow-500';\n    return 'bg-red-500';\n  };\n\n  const getFragmentationBadge = (fragmentation: number) => {\n    if (fragmentation > 30) return <Badge variant=\"destructive\">Yüksek</Badge>;\n    if (fragmentation > 10) return <Badge variant=\"secondary\">Orta</Badge>;\n    return <Badge variant=\"default\">Düşük</Badge>;\n  };\n\n  const getRecommendationBadge = (recommendation: string) => {\n    switch (recommendation) {\n      case 'REBUILD':\n        return <Badge variant=\"destructive\">Rebuild Gerekli</Badge>;\n      case 'REORGANIZE':\n        return <Badge variant=\"secondary\">Reorganize Gerekli</Badge>;\n      default:\n        return <Badge variant=\"default\">İyi Durumda</Badge>;\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Analiz Başlatma */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Performans Analizi</CardTitle>\n          <CardDescription>\n            Veritabanınızın performans durumunu analiz edin\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              {analysisResult && (\n                <p className=\"text-sm text-gray-600\">\n                  Son analiz: {format(new Date(analysisResult.analysisDate), 'dd MMMM yyyy HH:mm', { locale: tr })}\n                </p>\n              )}\n            </div>\n            <Button \n              onClick={runAnalysis} \n              disabled={isAnalyzing}\n              size=\"lg\"\n            >\n              {isAnalyzing ? 'Analiz Ediliyor...' : 'Analizi Başlat'}\n            </Button>\n          </div>\n\n          {error && (\n            <Alert className=\"mt-4 border-red-200 bg-red-50\">\n              <AlertDescription className=\"text-red-800\">\n                {error}\n              </AlertDescription>\n            </Alert>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Analiz Sonuçları */}\n      {analysisResult && (\n        <div className=\"space-y-6\">\n          {/* Performans Skoru */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Genel Performans Skoru</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"flex-1\">\n                  <div className=\"flex justify-between text-sm mb-2\">\n                    <span>Performans Skoru</span>\n                    <span className=\"font-medium\">%{analysisResult.performanceScore}</span>\n                  </div>\n                  <Progress \n                    value={analysisResult.performanceScore} \n                    className=\"h-3\"\n                  />\n                </div>\n                <div className={`w-16 h-16 rounded-full ${getScoreColor(analysisResult.performanceScore)} flex items-center justify-center text-white font-bold text-lg`}>\n                  {analysisResult.performanceScore}\n                </div>\n              </div>\n              \n              <div className=\"mt-4 grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n                <div className=\"text-center\">\n                  <div className=\"font-medium text-gray-900\">{analysisResult.tableSizes.length}</div>\n                  <div className=\"text-gray-600\">Tablo</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"font-medium text-gray-900\">{analysisResult.indexFragmentation.length}</div>\n                  <div className=\"text-gray-600\">Fragmente İndeks</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"font-medium text-gray-900\">{analysisResult.slowQueries.length}</div>\n                  <div className=\"text-gray-600\">Yavaş Sorgu</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"font-medium text-gray-900\">{analysisResult.backupHistory.length}</div>\n                  <div className=\"text-gray-600\">Yedekleme</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Detaylı Analiz Sonuçları */}\n          <Tabs defaultValue=\"tables\" className=\"space-y-4\">\n            <TabsList className=\"grid w-full grid-cols-5\">\n              <TabsTrigger value=\"tables\">Tablolar</TabsTrigger>\n              <TabsTrigger value=\"indexes\">İndeksler</TabsTrigger>\n              <TabsTrigger value=\"queries\">Yavaş Sorgular</TabsTrigger>\n              <TabsTrigger value=\"files\">Dosyalar</TabsTrigger>\n              <TabsTrigger value=\"system\">Sistem</TabsTrigger>\n            </TabsList>\n\n            {/* Tablo Boyutları */}\n            <TabsContent value=\"tables\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Tablo Boyutları</CardTitle>\n                  <CardDescription>\n                    En büyük tablolar ve disk kullanımları\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Tablo Adı</TableHead>\n                        <TableHead>Şema</TableHead>\n                        <TableHead className=\"text-right\">Satır Sayısı</TableHead>\n                        <TableHead className=\"text-right\">Toplam Boyut</TableHead>\n                        <TableHead className=\"text-right\">Kullanılan</TableHead>\n                        <TableHead className=\"text-right\">Boş Alan</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {analysisResult.tableSizes.slice(0, 10).map((table, index) => (\n                        <TableRow key={index}>\n                          <TableCell className=\"font-medium\">{table.TableName}</TableCell>\n                          <TableCell>{table.SchemaName}</TableCell>\n                          <TableCell className=\"text-right\">{table.RowCounts.toLocaleString('tr-TR')}</TableCell>\n                          <TableCell className=\"text-right\">{formatBytes(table.TotalSpaceKB * 1024)}</TableCell>\n                          <TableCell className=\"text-right\">{formatBytes(table.UsedSpaceKB * 1024)}</TableCell>\n                          <TableCell className=\"text-right\">{formatBytes(table.UnusedSpaceKB * 1024)}</TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            {/* İndeks Fragmantasyonu */}\n            <TabsContent value=\"indexes\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>İndeks Fragmantasyonu</CardTitle>\n                  <CardDescription>\n                    Fragmente olmuş indeksler ve öneriler\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Tablo</TableHead>\n                        <TableHead>İndeks</TableHead>\n                        <TableHead>Tip</TableHead>\n                        <TableHead className=\"text-right\">Fragmantasyon %</TableHead>\n                        <TableHead className=\"text-right\">Sayfa Sayısı</TableHead>\n                        <TableHead>Öneri</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {analysisResult.indexFragmentation.map((index, i) => (\n                        <TableRow key={i}>\n                          <TableCell className=\"font-medium\">{index.TableName}</TableCell>\n                          <TableCell>{index.IndexName}</TableCell>\n                          <TableCell>{index.IndexType}</TableCell>\n                          <TableCell className=\"text-right\">\n                            <div className=\"flex items-center justify-end space-x-2\">\n                              <span>{index.FragmentationPercent.toFixed(1)}%</span>\n                              {getFragmentationBadge(index.FragmentationPercent)}\n                            </div>\n                          </TableCell>\n                          <TableCell className=\"text-right\">{index.PageCount.toLocaleString('tr-TR')}</TableCell>\n                          <TableCell>{getRecommendationBadge(index.Recommendation)}</TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            {/* Yavaş Sorgular */}\n            <TabsContent value=\"queries\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>En Yavaş Sorgular</CardTitle>\n                  <CardDescription>\n                    Performans sorununa neden olan sorgular\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Sorgu</TableHead>\n                        <TableHead className=\"text-right\">Çalışma Sayısı</TableHead>\n                        <TableHead className=\"text-right\">Ortalama Süre (sn)</TableHead>\n                        <TableHead className=\"text-right\">Toplam CPU (sn)</TableHead>\n                        <TableHead className=\"text-right\">Ortalama Okuma</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {analysisResult.slowQueries.slice(0, 10).map((query, index) => (\n                        <TableRow key={index}>\n                          <TableCell className=\"max-w-md\">\n                            <code className=\"text-xs bg-gray-100 p-1 rounded block truncate\">\n                              {query.statement_text}\n                            </code>\n                          </TableCell>\n                          <TableCell className=\"text-right\">{query.execution_count.toLocaleString('tr-TR')}</TableCell>\n                          <TableCell className=\"text-right\">{query.avg_elapsed_time_seconds.toFixed(3)}</TableCell>\n                          <TableCell className=\"text-right\">{query.total_cpu_time_seconds.toFixed(3)}</TableCell>\n                          <TableCell className=\"text-right\">{query.avg_logical_reads.toLocaleString('tr-TR')}</TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            {/* Veritabanı Dosyaları */}\n            <TabsContent value=\"files\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Veritabanı Dosyaları</CardTitle>\n                  <CardDescription>\n                    Veri ve log dosyalarının boyutları\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Dosya Adı</TableHead>\n                        <TableHead>Tip</TableHead>\n                        <TableHead className=\"text-right\">Boyut (MB)</TableHead>\n                        <TableHead className=\"text-right\">Maksimum (MB)</TableHead>\n                        <TableHead className=\"text-right\">Büyüme</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {analysisResult.databaseFiles.map((file, index) => (\n                        <TableRow key={index}>\n                          <TableCell className=\"font-medium\">{file.FileName}</TableCell>\n                          <TableCell>\n                            <Badge variant={file.FileType === 'ROWS' ? 'default' : 'secondary'}>\n                              {file.FileType === 'ROWS' ? 'Veri' : 'Log'}\n                            </Badge>\n                          </TableCell>\n                          <TableCell className=\"text-right\">{file.SizeMB.toFixed(2)}</TableCell>\n                          <TableCell className=\"text-right\">\n                            {file.MaxSizeMB === -1 ? 'Sınırsız' : file.MaxSizeMB.toFixed(2)}\n                          </TableCell>\n                          <TableCell className=\"text-right\">\n                            {file.Growth}{file.IsPercentGrowth ? '%' : ' MB'}\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            {/* Sistem Bilgileri */}\n            <TabsContent value=\"system\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* CPU Kullanımı */}\n                {analysisResult.cpuUsage.length > 0 && (\n                  <Card>\n                    <CardHeader>\n                      <CardTitle>CPU Kullanımı</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-4\">\n                        <div>\n                          <div className=\"flex justify-between text-sm mb-1\">\n                            <span>SQL Server</span>\n                            <span>{analysisResult.cpuUsage[0].SQL_CPU_Percentage}%</span>\n                          </div>\n                          <Progress value={analysisResult.cpuUsage[0].SQL_CPU_Percentage} />\n                        </div>\n                        <div>\n                          <div className=\"flex justify-between text-sm mb-1\">\n                            <span>Sistem Boşta</span>\n                            <span>{analysisResult.cpuUsage[0].System_Idle_Percentage}%</span>\n                          </div>\n                          <Progress value={analysisResult.cpuUsage[0].System_Idle_Percentage} />\n                        </div>\n                        <div>\n                          <div className=\"flex justify-between text-sm mb-1\">\n                            <span>Diğer Süreçler</span>\n                            <span>{analysisResult.cpuUsage[0].Other_Process_CPU_Percentage}%</span>\n                          </div>\n                          <Progress value={analysisResult.cpuUsage[0].Other_Process_CPU_Percentage} />\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                )}\n\n                {/* Bellek Kullanımı */}\n                {analysisResult.memoryUsage.length > 0 && (\n                  <Card>\n                    <CardHeader>\n                      <CardTitle>Bellek Kullanımı</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-3\">\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-sm\">Toplam Fiziksel Bellek:</span>\n                          <span className=\"text-sm font-medium\">\n                            {formatBytes(analysisResult.memoryUsage[0].Total_Physical_Memory_MB * 1024 * 1024)}\n                          </span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-sm\">Kullanılabilir Bellek:</span>\n                          <span className=\"text-sm font-medium\">\n                            {formatBytes(analysisResult.memoryUsage[0].Available_Physical_Memory_MB * 1024 * 1024)}\n                          </span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-sm\">Sistem Durumu:</span>\n                          <Badge variant=\"default\">\n                            {analysisResult.memoryUsage[0].System_Memory_State}\n                          </Badge>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                )}\n              </div>\n            </TabsContent>\n          </Tabs>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;;AAbA;;;;;;;;;;;AAoBe,SAAS,kBAAkB,EAAE,kBAAkB,EAAE,cAAc,EAA0B;;IACtG,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,cAAc;QAClB,eAAe;QACf,SAAS;QAET,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,gBAAgB;gBAC3C,QAAQ;YACV;YAEA,MAAM,SAAS,MAAM,SAAS,IAAI;YAElC,IAAI,OAAO,OAAO,IAAI,OAAO,IAAI,EAAE;gBACjC,mBAAmB,OAAO,IAAI;YAChC,OAAO;gBACL,SAAS,OAAO,KAAK,IAAI;YAC3B;QACF,EAAE,OAAO,OAAO;YACd,SAAS,CAAC,eAAe,EAAE,OAAO;QACpC,SAAU;YACR,eAAe;QACjB;IACF;IAEA,MAAM,cAAc,CAAC;QACnB,IAAI,UAAU,GAAG,OAAO;QACxB,MAAM,IAAI;QACV,MAAM,QAAQ;YAAC;YAAK;YAAM;YAAM;YAAM;SAAK;QAC3C,MAAM,IAAI,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,SAAS,KAAK,GAAG,CAAC;QAChD,OAAO,WAAW,CAAC,QAAQ,KAAK,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,CAAC,MAAM,MAAM,KAAK,CAAC,EAAE;IACzE;IAEA,MAAM,gBAAgB,CAAC;QACrB,IAAI,SAAS,IAAI,OAAO;QACxB,IAAI,SAAS,IAAI,OAAO;QACxB,OAAO;IACT;IAEA,MAAM,wBAAwB,CAAC;QAC7B,IAAI,gBAAgB,IAAI,qBAAO,6LAAC,oIAAA,CAAA,QAAK;YAAC,SAAQ;sBAAc;;;;;;QAC5D,IAAI,gBAAgB,IAAI,qBAAO,6LAAC,oIAAA,CAAA,QAAK;YAAC,SAAQ;sBAAY;;;;;;QAC1D,qBAAO,6LAAC,oIAAA,CAAA,QAAK;YAAC,SAAQ;sBAAU;;;;;;IAClC;IAEA,MAAM,yBAAyB,CAAC;QAC9B,OAAQ;YACN,KAAK;gBACH,qBAAO,6LAAC,oIAAA,CAAA,QAAK;oBAAC,SAAQ;8BAAc;;;;;;YACtC,KAAK;gBACH,qBAAO,6LAAC,oIAAA,CAAA,QAAK;oBAAC,SAAQ;8BAAY;;;;;;YACpC;gBACE,qBAAO,6LAAC,oIAAA,CAAA,QAAK;oBAAC,SAAQ;8BAAU;;;;;;QACpC;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC,mIAAA,CAAA,OAAI;;kCACH,6LAAC,mIAAA,CAAA,aAAU;;0CACT,6LAAC,mIAAA,CAAA,YAAS;0CAAC;;;;;;0CACX,6LAAC,mIAAA,CAAA,kBAAe;0CAAC;;;;;;;;;;;;kCAInB,6LAAC,mIAAA,CAAA,cAAW;;0CACV,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;kDACE,gCACC,6LAAC;4CAAE,WAAU;;gDAAwB;gDACtB,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,eAAe,YAAY,GAAG,sBAAsB;oDAAE,QAAQ,+IAAA,CAAA,KAAE;gDAAC;;;;;;;;;;;;kDAIpG,6LAAC,qIAAA,CAAA,SAAM;wCACL,SAAS;wCACT,UAAU;wCACV,MAAK;kDAEJ,cAAc,uBAAuB;;;;;;;;;;;;4BAIzC,uBACC,6LAAC,oIAAA,CAAA,QAAK;gCAAC,WAAU;0CACf,cAAA,6LAAC,oIAAA,CAAA,mBAAgB;oCAAC,WAAU;8CACzB;;;;;;;;;;;;;;;;;;;;;;;YAQV,gCACC,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC,mIAAA,CAAA,OAAI;;0CACH,6LAAC,mIAAA,CAAA,aAAU;0CACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;8CAAC;;;;;;;;;;;0CAEb,6LAAC,mIAAA,CAAA,cAAW;;kDACV,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;0EAAK;;;;;;0EACN,6LAAC;gEAAK,WAAU;;oEAAc;oEAAE,eAAe,gBAAgB;;;;;;;;;;;;;kEAEjE,6LAAC,uIAAA,CAAA,WAAQ;wDACP,OAAO,eAAe,gBAAgB;wDACtC,WAAU;;;;;;;;;;;;0DAGd,6LAAC;gDAAI,WAAW,CAAC,uBAAuB,EAAE,cAAc,eAAe,gBAAgB,EAAE,8DAA8D,CAAC;0DACrJ,eAAe,gBAAgB;;;;;;;;;;;;kDAIpC,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;kEAA6B,eAAe,UAAU,CAAC,MAAM;;;;;;kEAC5E,6LAAC;wDAAI,WAAU;kEAAgB;;;;;;;;;;;;0DAEjC,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;kEAA6B,eAAe,kBAAkB,CAAC,MAAM;;;;;;kEACpF,6LAAC;wDAAI,WAAU;kEAAgB;;;;;;;;;;;;0DAEjC,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;kEAA6B,eAAe,WAAW,CAAC,MAAM;;;;;;kEAC7E,6LAAC;wDAAI,WAAU;kEAAgB;;;;;;;;;;;;0DAEjC,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;kEAA6B,eAAe,aAAa,CAAC,MAAM;;;;;;kEAC/E,6LAAC;wDAAI,WAAU;kEAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAOvC,6LAAC,mIAAA,CAAA,OAAI;wBAAC,cAAa;wBAAS,WAAU;;0CACpC,6LAAC,mIAAA,CAAA,WAAQ;gCAAC,WAAU;;kDAClB,6LAAC,mIAAA,CAAA,cAAW;wCAAC,OAAM;kDAAS;;;;;;kDAC5B,6LAAC,mIAAA,CAAA,cAAW;wCAAC,OAAM;kDAAU;;;;;;kDAC7B,6LAAC,mIAAA,CAAA,cAAW;wCAAC,OAAM;kDAAU;;;;;;kDAC7B,6LAAC,mIAAA,CAAA,cAAW;wCAAC,OAAM;kDAAQ;;;;;;kDAC3B,6LAAC,mIAAA,CAAA,cAAW;wCAAC,OAAM;kDAAS;;;;;;;;;;;;0CAI9B,6LAAC,mIAAA,CAAA,cAAW;gCAAC,OAAM;0CACjB,cAAA,6LAAC,mIAAA,CAAA,OAAI;;sDACH,6LAAC,mIAAA,CAAA,aAAU;;8DACT,6LAAC,mIAAA,CAAA,YAAS;8DAAC;;;;;;8DACX,6LAAC,mIAAA,CAAA,kBAAe;8DAAC;;;;;;;;;;;;sDAInB,6LAAC,mIAAA,CAAA,cAAW;sDACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;;kEACJ,6LAAC,oIAAA,CAAA,cAAW;kEACV,cAAA,6LAAC,oIAAA,CAAA,WAAQ;;8EACP,6LAAC,oIAAA,CAAA,YAAS;8EAAC;;;;;;8EACX,6LAAC,oIAAA,CAAA,YAAS;8EAAC;;;;;;8EACX,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EAAa;;;;;;8EAClC,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EAAa;;;;;;8EAClC,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EAAa;;;;;;8EAClC,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EAAa;;;;;;;;;;;;;;;;;kEAGtC,6LAAC,oIAAA,CAAA,YAAS;kEACP,eAAe,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,OAAO,sBAClD,6LAAC,oIAAA,CAAA,WAAQ;;kFACP,6LAAC,oIAAA,CAAA,YAAS;wEAAC,WAAU;kFAAe,MAAM,SAAS;;;;;;kFACnD,6LAAC,oIAAA,CAAA,YAAS;kFAAE,MAAM,UAAU;;;;;;kFAC5B,6LAAC,oIAAA,CAAA,YAAS;wEAAC,WAAU;kFAAc,MAAM,SAAS,CAAC,cAAc,CAAC;;;;;;kFAClE,6LAAC,oIAAA,CAAA,YAAS;wEAAC,WAAU;kFAAc,YAAY,MAAM,YAAY,GAAG;;;;;;kFACpE,6LAAC,oIAAA,CAAA,YAAS;wEAAC,WAAU;kFAAc,YAAY,MAAM,WAAW,GAAG;;;;;;kFACnE,6LAAC,oIAAA,CAAA,YAAS;wEAAC,WAAU;kFAAc,YAAY,MAAM,aAAa,GAAG;;;;;;;+DANxD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CAgB3B,6LAAC,mIAAA,CAAA,cAAW;gCAAC,OAAM;0CACjB,cAAA,6LAAC,mIAAA,CAAA,OAAI;;sDACH,6LAAC,mIAAA,CAAA,aAAU;;8DACT,6LAAC,mIAAA,CAAA,YAAS;8DAAC;;;;;;8DACX,6LAAC,mIAAA,CAAA,kBAAe;8DAAC;;;;;;;;;;;;sDAInB,6LAAC,mIAAA,CAAA,cAAW;sDACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;;kEACJ,6LAAC,oIAAA,CAAA,cAAW;kEACV,cAAA,6LAAC,oIAAA,CAAA,WAAQ;;8EACP,6LAAC,oIAAA,CAAA,YAAS;8EAAC;;;;;;8EACX,6LAAC,oIAAA,CAAA,YAAS;8EAAC;;;;;;8EACX,6LAAC,oIAAA,CAAA,YAAS;8EAAC;;;;;;8EACX,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EAAa;;;;;;8EAClC,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EAAa;;;;;;8EAClC,6LAAC,oIAAA,CAAA,YAAS;8EAAC;;;;;;;;;;;;;;;;;kEAGf,6LAAC,oIAAA,CAAA,YAAS;kEACP,eAAe,kBAAkB,CAAC,GAAG,CAAC,CAAC,OAAO,kBAC7C,6LAAC,oIAAA,CAAA,WAAQ;;kFACP,6LAAC,oIAAA,CAAA,YAAS;wEAAC,WAAU;kFAAe,MAAM,SAAS;;;;;;kFACnD,6LAAC,oIAAA,CAAA,YAAS;kFAAE,MAAM,SAAS;;;;;;kFAC3B,6LAAC,oIAAA,CAAA,YAAS;kFAAE,MAAM,SAAS;;;;;;kFAC3B,6LAAC,oIAAA,CAAA,YAAS;wEAAC,WAAU;kFACnB,cAAA,6LAAC;4EAAI,WAAU;;8FACb,6LAAC;;wFAAM,MAAM,oBAAoB,CAAC,OAAO,CAAC;wFAAG;;;;;;;gFAC5C,sBAAsB,MAAM,oBAAoB;;;;;;;;;;;;kFAGrD,6LAAC,oIAAA,CAAA,YAAS;wEAAC,WAAU;kFAAc,MAAM,SAAS,CAAC,cAAc,CAAC;;;;;;kFAClE,6LAAC,oIAAA,CAAA,YAAS;kFAAE,uBAAuB,MAAM,cAAc;;;;;;;+DAX1C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CAqB3B,6LAAC,mIAAA,CAAA,cAAW;gCAAC,OAAM;0CACjB,cAAA,6LAAC,mIAAA,CAAA,OAAI;;sDACH,6LAAC,mIAAA,CAAA,aAAU;;8DACT,6LAAC,mIAAA,CAAA,YAAS;8DAAC;;;;;;8DACX,6LAAC,mIAAA,CAAA,kBAAe;8DAAC;;;;;;;;;;;;sDAInB,6LAAC,mIAAA,CAAA,cAAW;sDACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;;kEACJ,6LAAC,oIAAA,CAAA,cAAW;kEACV,cAAA,6LAAC,oIAAA,CAAA,WAAQ;;8EACP,6LAAC,oIAAA,CAAA,YAAS;8EAAC;;;;;;8EACX,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EAAa;;;;;;8EAClC,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EAAa;;;;;;8EAClC,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EAAa;;;;;;8EAClC,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EAAa;;;;;;;;;;;;;;;;;kEAGtC,6LAAC,oIAAA,CAAA,YAAS;kEACP,eAAe,WAAW,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,OAAO,sBACnD,6LAAC,oIAAA,CAAA,WAAQ;;kFACP,6LAAC,oIAAA,CAAA,YAAS;wEAAC,WAAU;kFACnB,cAAA,6LAAC;4EAAK,WAAU;sFACb,MAAM,cAAc;;;;;;;;;;;kFAGzB,6LAAC,oIAAA,CAAA,YAAS;wEAAC,WAAU;kFAAc,MAAM,eAAe,CAAC,cAAc,CAAC;;;;;;kFACxE,6LAAC,oIAAA,CAAA,YAAS;wEAAC,WAAU;kFAAc,MAAM,wBAAwB,CAAC,OAAO,CAAC;;;;;;kFAC1E,6LAAC,oIAAA,CAAA,YAAS;wEAAC,WAAU;kFAAc,MAAM,sBAAsB,CAAC,OAAO,CAAC;;;;;;kFACxE,6LAAC,oIAAA,CAAA,YAAS;wEAAC,WAAU;kFAAc,MAAM,iBAAiB,CAAC,cAAc,CAAC;;;;;;;+DAT7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CAmB3B,6LAAC,mIAAA,CAAA,cAAW;gCAAC,OAAM;0CACjB,cAAA,6LAAC,mIAAA,CAAA,OAAI;;sDACH,6LAAC,mIAAA,CAAA,aAAU;;8DACT,6LAAC,mIAAA,CAAA,YAAS;8DAAC;;;;;;8DACX,6LAAC,mIAAA,CAAA,kBAAe;8DAAC;;;;;;;;;;;;sDAInB,6LAAC,mIAAA,CAAA,cAAW;sDACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;;kEACJ,6LAAC,oIAAA,CAAA,cAAW;kEACV,cAAA,6LAAC,oIAAA,CAAA,WAAQ;;8EACP,6LAAC,oIAAA,CAAA,YAAS;8EAAC;;;;;;8EACX,6LAAC,oIAAA,CAAA,YAAS;8EAAC;;;;;;8EACX,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EAAa;;;;;;8EAClC,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EAAa;;;;;;8EAClC,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EAAa;;;;;;;;;;;;;;;;;kEAGtC,6LAAC,oIAAA,CAAA,YAAS;kEACP,eAAe,aAAa,CAAC,GAAG,CAAC,CAAC,MAAM,sBACvC,6LAAC,oIAAA,CAAA,WAAQ;;kFACP,6LAAC,oIAAA,CAAA,YAAS;wEAAC,WAAU;kFAAe,KAAK,QAAQ;;;;;;kFACjD,6LAAC,oIAAA,CAAA,YAAS;kFACR,cAAA,6LAAC,oIAAA,CAAA,QAAK;4EAAC,SAAS,KAAK,QAAQ,KAAK,SAAS,YAAY;sFACpD,KAAK,QAAQ,KAAK,SAAS,SAAS;;;;;;;;;;;kFAGzC,6LAAC,oIAAA,CAAA,YAAS;wEAAC,WAAU;kFAAc,KAAK,MAAM,CAAC,OAAO,CAAC;;;;;;kFACvD,6LAAC,oIAAA,CAAA,YAAS;wEAAC,WAAU;kFAClB,KAAK,SAAS,KAAK,CAAC,IAAI,aAAa,KAAK,SAAS,CAAC,OAAO,CAAC;;;;;;kFAE/D,6LAAC,oIAAA,CAAA,YAAS;wEAAC,WAAU;;4EAClB,KAAK,MAAM;4EAAE,KAAK,eAAe,GAAG,MAAM;;;;;;;;+DAZhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CAuB3B,6LAAC,mIAAA,CAAA,cAAW;gCAAC,OAAM;0CACjB,cAAA,6LAAC;oCAAI,WAAU;;wCAEZ,eAAe,QAAQ,CAAC,MAAM,GAAG,mBAChC,6LAAC,mIAAA,CAAA,OAAI;;8DACH,6LAAC,mIAAA,CAAA,aAAU;8DACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;kEAAC;;;;;;;;;;;8DAEb,6LAAC,mIAAA,CAAA,cAAW;8DACV,cAAA,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;;kFACC,6LAAC;wEAAI,WAAU;;0FACb,6LAAC;0FAAK;;;;;;0FACN,6LAAC;;oFAAM,eAAe,QAAQ,CAAC,EAAE,CAAC,kBAAkB;oFAAC;;;;;;;;;;;;;kFAEvD,6LAAC,uIAAA,CAAA,WAAQ;wEAAC,OAAO,eAAe,QAAQ,CAAC,EAAE,CAAC,kBAAkB;;;;;;;;;;;;0EAEhE,6LAAC;;kFACC,6LAAC;wEAAI,WAAU;;0FACb,6LAAC;0FAAK;;;;;;0FACN,6LAAC;;oFAAM,eAAe,QAAQ,CAAC,EAAE,CAAC,sBAAsB;oFAAC;;;;;;;;;;;;;kFAE3D,6LAAC,uIAAA,CAAA,WAAQ;wEAAC,OAAO,eAAe,QAAQ,CAAC,EAAE,CAAC,sBAAsB;;;;;;;;;;;;0EAEpE,6LAAC;;kFACC,6LAAC;wEAAI,WAAU;;0FACb,6LAAC;0FAAK;;;;;;0FACN,6LAAC;;oFAAM,eAAe,QAAQ,CAAC,EAAE,CAAC,4BAA4B;oFAAC;;;;;;;;;;;;;kFAEjE,6LAAC,uIAAA,CAAA,WAAQ;wEAAC,OAAO,eAAe,QAAQ,CAAC,EAAE,CAAC,4BAA4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wCAQjF,eAAe,WAAW,CAAC,MAAM,GAAG,mBACnC,6LAAC,mIAAA,CAAA,OAAI;;8DACH,6LAAC,mIAAA,CAAA,aAAU;8DACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;kEAAC;;;;;;;;;;;8DAEb,6LAAC,mIAAA,CAAA,cAAW;8DACV,cAAA,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAK,WAAU;kFAAU;;;;;;kFAC1B,6LAAC;wEAAK,WAAU;kFACb,YAAY,eAAe,WAAW,CAAC,EAAE,CAAC,wBAAwB,GAAG,OAAO;;;;;;;;;;;;0EAGjF,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAK,WAAU;kFAAU;;;;;;kFAC1B,6LAAC;wEAAK,WAAU;kFACb,YAAY,eAAe,WAAW,CAAC,EAAE,CAAC,4BAA4B,GAAG,OAAO;;;;;;;;;;;;0EAGrF,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAK,WAAU;kFAAU;;;;;;kFAC1B,6LAAC,oIAAA,CAAA,QAAK;wEAAC,SAAQ;kFACZ,eAAe,WAAW,CAAC,EAAE,CAAC,mBAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAc9E;GAvYwB;KAAA","debugId":null}},
    {"offset": {"line": 3068, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content>) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n          <XIcon />\n          <span className=\"sr-only\">Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,6LAAC,qKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;KAJS;AAMT,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,6LAAC,qKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;MAJS;AAMT,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,6LAAC,qKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;MAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,6LAAC,qKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,GAAG,OACkD;IACrD,qBACE,6LAAC;QAAa,aAAU;;0BACtB,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,mMAAA,CAAA,QAAK;;;;;0CACN,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKpC;MAxBS;AA0BT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,qKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 3265, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/maintenance-panel.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Badge } from '@/components/ui/badge';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Progress } from '@/components/ui/progress';\nimport { Separator } from '@/components/ui/separator';\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { MaintenanceTask, MaintenanceResult, PerformanceAnalysisResult } from '@/lib/db/types';\n\ninterface MaintenancePanelProps {\n  analysisResult: PerformanceAnalysisResult | null;\n}\n\nexport default function MaintenancePanel({ analysisResult }: MaintenancePanelProps) {\n  const [recommendedTasks, setRecommendedTasks] = useState<MaintenanceTask[]>([]);\n  const [selectedTasks, setSelectedTasks] = useState<string[]>([]);\n  const [isLoadingTasks, setIsLoadingTasks] = useState(false);\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [executionResults, setExecutionResults] = useState<MaintenanceResult[]>([]);\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    loadRecommendedTasks();\n  }, []);\n\n  const loadRecommendedTasks = async () => {\n    setIsLoadingTasks(true);\n    setError(null);\n\n    try {\n      const response = await fetch('/api/maintenance');\n      const result = await response.json();\n\n      if (result.success && result.data) {\n        setRecommendedTasks(result.data);\n      } else {\n        setError(result.error || 'Bakım önerileri yüklenemedi');\n      }\n    } catch (error) {\n      setError(`Bakım önerileri yüklenirken hata: ${error}`);\n    } finally {\n      setIsLoadingTasks(false);\n    }\n  };\n\n  const handleTaskSelection = (taskId: string, checked: boolean) => {\n    if (checked) {\n      setSelectedTasks(prev => [...prev, taskId]);\n    } else {\n      setSelectedTasks(prev => prev.filter(id => id !== taskId));\n    }\n  };\n\n  const handleSelectAll = (checked: boolean) => {\n    if (checked) {\n      setSelectedTasks(recommendedTasks.map(task => task.id));\n    } else {\n      setSelectedTasks([]);\n    }\n  };\n\n  const executeMaintenance = async () => {\n    const tasksToExecute = recommendedTasks.filter(task => selectedTasks.includes(task.id));\n    \n    setIsExecuting(true);\n    setError(null);\n    setExecutionResults([]);\n    setShowConfirmDialog(false);\n\n    try {\n      const response = await fetch('/api/maintenance', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ tasks: tasksToExecute }),\n      });\n\n      const result = await response.json();\n\n      if (result.success && result.data) {\n        setExecutionResults(result.data);\n        // Başarılı görevleri seçili listeden çıkar\n        const successfulTaskIds = result.data\n          .filter((r: MaintenanceResult) => r.success)\n          .map((r: MaintenanceResult) => r.taskId);\n        setSelectedTasks(prev => prev.filter(id => !successfulTaskIds.includes(id)));\n        \n        // Önerileri yeniden yükle\n        await loadRecommendedTasks();\n      } else {\n        setError(result.error || 'Bakım işlemleri başarısız oldu');\n      }\n    } catch (error) {\n      setError(`Bakım işlemleri sırasında hata: ${error}`);\n    } finally {\n      setIsExecuting(false);\n    }\n  };\n\n  const getRiskLevelBadge = (riskLevel: string) => {\n    switch (riskLevel) {\n      case 'LOW':\n        return <Badge variant=\"default\" className=\"bg-green-100 text-green-800\">Düşük Risk</Badge>;\n      case 'MEDIUM':\n        return <Badge variant=\"secondary\" className=\"bg-yellow-100 text-yellow-800\">Orta Risk</Badge>;\n      case 'HIGH':\n        return <Badge variant=\"destructive\">Yüksek Risk</Badge>;\n      default:\n        return <Badge variant=\"outline\">Bilinmeyen</Badge>;\n    }\n  };\n\n  const getTaskTypeIcon = (type: string) => {\n    switch (type) {\n      case 'CLEAN_LOGS':\n        return '🗑️';\n      case 'REBUILD_INDEX':\n        return '🔧';\n      case 'REORGANIZE_INDEX':\n        return '📋';\n      case 'CLEAN_TEMP':\n        return '🧹';\n      case 'UPDATE_STATS':\n        return '📊';\n      default:\n        return '⚙️';\n    }\n  };\n\n  const selectedTasksData = recommendedTasks.filter(task => selectedTasks.includes(task.id));\n  const totalEstimatedTime = selectedTasksData.reduce((total, task) => {\n    const minutes = parseInt(task.estimatedDuration.split('-')[0]) || 1;\n    return total + minutes;\n  }, 0);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Özet Kartları */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold text-blue-600\">{recommendedTasks.length}</div>\n            <div className=\"text-sm text-gray-600\">Önerilen Görev</div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold text-orange-600\">{selectedTasks.length}</div>\n            <div className=\"text-sm text-gray-600\">Seçili Görev</div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold text-green-600\">\n              {recommendedTasks.filter(t => t.riskLevel === 'LOW').length}\n            </div>\n            <div className=\"text-sm text-gray-600\">Düşük Risk</div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold text-red-600\">\n              {recommendedTasks.filter(t => t.riskLevel === 'HIGH').length}\n            </div>\n            <div className=\"text-sm text-gray-600\">Yüksek Risk</div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Ana Bakım Paneli */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <CardTitle>Önerilen Bakım İşlemleri</CardTitle>\n              <CardDescription>\n                Performans analizine dayalı bakım önerileri\n              </CardDescription>\n            </div>\n            <div className=\"flex space-x-2\">\n              <Button\n                variant=\"outline\"\n                onClick={loadRecommendedTasks}\n                disabled={isLoadingTasks}\n              >\n                {isLoadingTasks ? 'Yükleniyor...' : 'Yenile'}\n              </Button>\n              \n              {selectedTasks.length > 0 && (\n                <Button\n                  onClick={() => setShowConfirmDialog(true)}\n                  disabled={isExecuting}\n                  className=\"bg-blue-600 hover:bg-blue-700\"\n                >\n                  {isExecuting ? 'Çalıştırılıyor...' : `${selectedTasks.length} Görevi Çalıştır`}\n                </Button>\n              )}\n            </div>\n          </div>\n        </CardHeader>\n        \n        <CardContent>\n          {error && (\n            <Alert className=\"mb-4 border-red-200 bg-red-50\">\n              <AlertDescription className=\"text-red-800\">\n                {error}\n              </AlertDescription>\n            </Alert>\n          )}\n\n          {isLoadingTasks ? (\n            <div className=\"text-center py-8\">\n              <div className=\"text-gray-600\">Bakım önerileri yükleniyor...</div>\n            </div>\n          ) : recommendedTasks.length === 0 ? (\n            <Alert>\n              <AlertDescription>\n                Şu anda önerilen bakım işlemi bulunmuyor. Veritabanınız iyi durumda görünüyor!\n              </AlertDescription>\n            </Alert>\n          ) : (\n            <div className=\"space-y-4\">\n              {/* Toplu Seçim */}\n              <div className=\"flex items-center space-x-2 pb-4 border-b\">\n                <Checkbox\n                  id=\"select-all\"\n                  checked={selectedTasks.length === recommendedTasks.length}\n                  onCheckedChange={handleSelectAll}\n                />\n                <label htmlFor=\"select-all\" className=\"text-sm font-medium\">\n                  Tümünü Seç ({recommendedTasks.length} görev)\n                </label>\n                \n                {selectedTasks.length > 0 && (\n                  <div className=\"ml-auto text-sm text-gray-600\">\n                    Tahmini süre: ~{totalEstimatedTime} dakika\n                  </div>\n                )}\n              </div>\n\n              {/* Görev Listesi */}\n              <div className=\"space-y-3\">\n                {recommendedTasks.map((task) => (\n                  <Card key={task.id} className={`transition-all ${selectedTasks.includes(task.id) ? 'ring-2 ring-blue-500 bg-blue-50' : ''}`}>\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-start space-x-3\">\n                        <Checkbox\n                          id={task.id}\n                          checked={selectedTasks.includes(task.id)}\n                          onCheckedChange={(checked) => handleTaskSelection(task.id, checked as boolean)}\n                          className=\"mt-1\"\n                        />\n                        \n                        <div className=\"flex-1 space-y-2\">\n                          <div className=\"flex items-center space-x-2\">\n                            <span className=\"text-lg\">{getTaskTypeIcon(task.type)}</span>\n                            <h4 className=\"font-medium text-gray-900\">{task.title}</h4>\n                            {getRiskLevelBadge(task.riskLevel)}\n                          </div>\n                          \n                          <p className=\"text-sm text-gray-600\">{task.description}</p>\n                          \n                          <div className=\"flex items-center space-x-4 text-xs text-gray-500\">\n                            <span>⏱️ {task.estimatedDuration}</span>\n                            <span>🔧 {task.type.replace('_', ' ')}</span>\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Çalıştırma Sonuçları */}\n      {executionResults.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle>Bakım İşlemi Sonuçları</CardTitle>\n            <CardDescription>\n              Son çalıştırılan bakım işlemlerinin sonuçları\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Görev</TableHead>\n                  <TableHead>Durum</TableHead>\n                  <TableHead>Mesaj</TableHead>\n                  <TableHead className=\"text-right\">Süre (ms)</TableHead>\n                  <TableHead className=\"text-right\">Etkilenen Satır</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {executionResults.map((result, index) => {\n                  const task = recommendedTasks.find(t => t.id === result.taskId);\n                  return (\n                    <TableRow key={index}>\n                      <TableCell className=\"font-medium\">\n                        {task ? task.title : result.taskId}\n                      </TableCell>\n                      <TableCell>\n                        <Badge variant={result.success ? \"default\" : \"destructive\"}>\n                          {result.success ? 'Başarılı' : 'Başarısız'}\n                        </Badge>\n                      </TableCell>\n                      <TableCell className=\"max-w-md\">\n                        <div className=\"truncate\" title={result.message}>\n                          {result.message}\n                        </div>\n                      </TableCell>\n                      <TableCell className=\"text-right\">{result.executionTime}</TableCell>\n                      <TableCell className=\"text-right\">\n                        {result.affectedRows ? result.affectedRows.toLocaleString('tr-TR') : '-'}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Onay Dialogu */}\n      <Dialog open={showConfirmDialog} onOpenChange={setShowConfirmDialog}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>Bakım İşlemlerini Onayla</DialogTitle>\n            <DialogDescription>\n              Seçili {selectedTasks.length} bakım işlemi çalıştırılacak. Bu işlemler geri alınamaz.\n            </DialogDescription>\n          </DialogHeader>\n          \n          <div className=\"space-y-4 max-h-96 overflow-y-auto\">\n            {selectedTasksData.map((task) => (\n              <div key={task.id} className=\"flex items-start space-x-3 p-3 bg-gray-50 rounded-lg\">\n                <span className=\"text-lg\">{getTaskTypeIcon(task.type)}</span>\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-2 mb-1\">\n                    <h4 className=\"font-medium\">{task.title}</h4>\n                    {getRiskLevelBadge(task.riskLevel)}\n                  </div>\n                  <p className=\"text-sm text-gray-600\">{task.description}</p>\n                  <div className=\"text-xs text-gray-500 mt-1\">\n                    Tahmini süre: {task.estimatedDuration}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <span className=\"text-yellow-600\">⚠️</span>\n              <div className=\"text-sm\">\n                <div className=\"font-medium text-yellow-800\">Önemli Uyarılar:</div>\n                <ul className=\"text-yellow-700 mt-1 space-y-1\">\n                  <li>• Bakım işlemleri sırasında performans etkilenebilir</li>\n                  <li>• Yüksek riskli işlemler için yedekleme önerilir</li>\n                  <li>• İşlemler sırasında veritabanı erişimi kısıtlanabilir</li>\n                  <li>• Tahmini toplam süre: ~{totalEstimatedTime} dakika</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setShowConfirmDialog(false)}>\n              İptal\n            </Button>\n            <Button onClick={executeMaintenance} className=\"bg-blue-600 hover:bg-blue-700\">\n              Onayla ve Çalıştır\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4262, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4511, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/performance-charts.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useMemo } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { PerformanceAnalysisResult } from '@/lib/db/types';\nimport { format, subDays, subMonths } from 'date-fns';\nimport { tr } from 'date-fns/locale';\n\ninterface PerformanceChartsProps {\n  analysisResult: PerformanceAnalysisResult;\n}\n\nexport default function PerformanceCharts({ analysisResult }: PerformanceChartsProps) {\n  const [selectedPeriod, setSelectedPeriod] = useState('7d');\n  const [selectedMetric, setSelectedMetric] = useState('performance');\n\n  // Mock data for trends (gerçek uygulamada veritabanından gelecek)\n  const generateMockTrendData = (days: number) => {\n    const data = [];\n    const baseScore = analysisResult.performanceScore;\n    \n    for (let i = days; i >= 0; i--) {\n      const date = subDays(new Date(), i);\n      const variation = (Math.random() - 0.5) * 20; // ±10 puan varyasyon\n      const score = Math.max(0, Math.min(100, baseScore + variation));\n      \n      data.push({\n        date: format(date, 'dd/MM'),\n        value: Math.round(score),\n        fullDate: date\n      });\n    }\n    \n    return data;\n  };\n\n  const trendData = useMemo(() => {\n    const days = selectedPeriod === '7d' ? 7 : selectedPeriod === '30d' ? 30 : 90;\n    return generateMockTrendData(days);\n  }, [selectedPeriod, analysisResult.performanceScore]);\n\n  const formatBytes = (bytes: number) => {\n    if (bytes === 0) return '0 B';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const getScoreColor = (score: number) => {\n    if (score >= 80) return 'text-green-600';\n    if (score >= 60) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  // En büyük tabloları al\n  const topTables = analysisResult.tableSizes\n    .sort((a, b) => b.TotalSpaceKB - a.TotalSpaceKB)\n    .slice(0, 10);\n\n  // En fragmente indeksleri al\n  const topFragmentedIndexes = analysisResult.indexFragmentation\n    .sort((a, b) => b.FragmentationPercent - a.FragmentationPercent)\n    .slice(0, 10);\n\n  // En yavaş sorguları al\n  const topSlowQueries = analysisResult.slowQueries\n    .sort((a, b) => b.avg_elapsed_time_seconds - a.avg_elapsed_time_seconds)\n    .slice(0, 5);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Başlık ve Kontroller */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900\">Performans Raporları</h2>\n          <p className=\"text-gray-600\">\n            Analiz tarihi: {format(new Date(analysisResult.analysisDate), 'dd MMMM yyyy HH:mm', { locale: tr })}\n          </p>\n        </div>\n        \n        <div className=\"flex space-x-2\">\n          <Select value={selectedPeriod} onValueChange={setSelectedPeriod}>\n            <SelectTrigger className=\"w-32\">\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"7d\">Son 7 Gün</SelectItem>\n              <SelectItem value=\"30d\">Son 30 Gün</SelectItem>\n              <SelectItem value=\"90d\">Son 3 Ay</SelectItem>\n            </SelectContent>\n          </Select>\n          \n          <Button variant=\"outline\" size=\"sm\">\n            Raporu İndir\n          </Button>\n        </div>\n      </div>\n\n      <Tabs defaultValue=\"overview\" className=\"space-y-6\">\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"overview\">Genel Bakış</TabsTrigger>\n          <TabsTrigger value=\"trends\">Trendler</TabsTrigger>\n          <TabsTrigger value=\"details\">Detaylar</TabsTrigger>\n          <TabsTrigger value=\"recommendations\">Öneriler</TabsTrigger>\n        </TabsList>\n\n        {/* Genel Bakış */}\n        <TabsContent value=\"overview\" className=\"space-y-6\">\n          {/* Performans Skoru Kartı */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Genel Performans Durumu</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n                <div className=\"text-center\">\n                  <div className={`text-4xl font-bold mb-2 ${getScoreColor(analysisResult.performanceScore)}`}>\n                    %{analysisResult.performanceScore}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Performans Skoru</div>\n                  <Badge \n                    variant={analysisResult.performanceScore >= 60 ? \"default\" : \"destructive\"}\n                    className=\"mt-2\"\n                  >\n                    {analysisResult.performanceScore >= 80 ? 'Mükemmel' : \n                     analysisResult.performanceScore >= 60 ? 'İyi' : \n                     analysisResult.performanceScore >= 40 ? 'Orta' : 'Zayıf'}\n                  </Badge>\n                </div>\n                \n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-blue-600 mb-2\">\n                    {analysisResult.tableSizes.length}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Toplam Tablo</div>\n                  <div className=\"text-xs text-gray-500 mt-1\">\n                    {formatBytes(analysisResult.tableSizes.reduce((sum, t) => sum + t.TotalSpaceKB * 1024, 0))} toplam\n                  </div>\n                </div>\n                \n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-orange-600 mb-2\">\n                    {analysisResult.indexFragmentation.length}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Fragmente İndeks</div>\n                  <div className=\"text-xs text-gray-500 mt-1\">\n                    Ortalama %{(analysisResult.indexFragmentation.reduce((sum, i) => sum + i.FragmentationPercent, 0) / analysisResult.indexFragmentation.length || 0).toFixed(1)}\n                  </div>\n                </div>\n                \n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-red-600 mb-2\">\n                    {analysisResult.slowQueries.length}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Yavaş Sorgu</div>\n                  <div className=\"text-xs text-gray-500 mt-1\">\n                    Ortalama {(analysisResult.slowQueries.reduce((sum, q) => sum + q.avg_elapsed_time_seconds, 0) / analysisResult.slowQueries.length || 0).toFixed(2)}s\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Sistem Kaynakları */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* CPU Kullanımı */}\n            {analysisResult.cpuUsage.length > 0 && (\n              <Card>\n                <CardHeader>\n                  <CardTitle>CPU Kullanımı</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm\">SQL Server</span>\n                      <span className=\"font-medium\">{analysisResult.cpuUsage[0].SQL_CPU_Percentage}%</span>\n                    </div>\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                      <div \n                        className=\"bg-blue-600 h-2 rounded-full\" \n                        style={{ width: `${analysisResult.cpuUsage[0].SQL_CPU_Percentage}%` }}\n                      ></div>\n                    </div>\n                    \n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm\">Sistem Boşta</span>\n                      <span className=\"font-medium\">{analysisResult.cpuUsage[0].System_Idle_Percentage}%</span>\n                    </div>\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                      <div \n                        className=\"bg-green-600 h-2 rounded-full\" \n                        style={{ width: `${analysisResult.cpuUsage[0].System_Idle_Percentage}%` }}\n                      ></div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            {/* Bellek Kullanımı */}\n            {analysisResult.memoryUsage.length > 0 && (\n              <Card>\n                <CardHeader>\n                  <CardTitle>Bellek Kullanımı</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm\">Toplam Bellek:</span>\n                      <span className=\"font-medium\">\n                        {formatBytes(analysisResult.memoryUsage[0].Total_Physical_Memory_MB * 1024 * 1024)}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm\">Kullanılabilir:</span>\n                      <span className=\"font-medium\">\n                        {formatBytes(analysisResult.memoryUsage[0].Available_Physical_Memory_MB * 1024 * 1024)}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm\">Durum:</span>\n                      <Badge variant=\"default\">\n                        {analysisResult.memoryUsage[0].System_Memory_State}\n                      </Badge>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n          </div>\n        </TabsContent>\n\n        {/* Trendler */}\n        <TabsContent value=\"trends\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Performans Trendi</CardTitle>\n              <CardDescription>\n                Son {selectedPeriod === '7d' ? '7 gün' : selectedPeriod === '30d' ? '30 gün' : '3 ay'} içindeki performans değişimi\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"h-64 flex items-end justify-between space-x-2\">\n                {trendData.map((point, index) => (\n                  <div key={index} className=\"flex flex-col items-center flex-1\">\n                    <div \n                      className={`w-full rounded-t ${\n                        point.value >= 80 ? 'bg-green-500' : \n                        point.value >= 60 ? 'bg-yellow-500' : 'bg-red-500'\n                      } transition-all hover:opacity-80`}\n                      style={{ height: `${(point.value / 100) * 200}px` }}\n                      title={`${point.date}: %${point.value}`}\n                    ></div>\n                    <div className=\"text-xs text-gray-600 mt-2 transform -rotate-45 origin-top-left\">\n                      {point.date}\n                    </div>\n                  </div>\n                ))}\n              </div>\n              <div className=\"flex justify-between text-sm text-gray-600 mt-4\">\n                <span>0%</span>\n                <span>50%</span>\n                <span>100%</span>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Detaylar */}\n        <TabsContent value=\"details\" className=\"space-y-6\">\n          {/* En Büyük Tablolar */}\n          <Card>\n            <CardHeader>\n              <CardTitle>En Büyük Tablolar</CardTitle>\n              <CardDescription>Disk alanını en çok kullanan tablolar</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3\">\n                {topTables.map((table, index) => (\n                  <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                    <div>\n                      <div className=\"font-medium\">{table.TableName}</div>\n                      <div className=\"text-sm text-gray-600\">\n                        {table.RowCounts.toLocaleString('tr-TR')} satır\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"font-medium\">{formatBytes(table.TotalSpaceKB * 1024)}</div>\n                      <div className=\"text-sm text-gray-600\">\n                        %{((table.UsedSpaceKB / table.TotalSpaceKB) * 100).toFixed(1)} kullanılan\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* En Fragmente İndeksler */}\n          <Card>\n            <CardHeader>\n              <CardTitle>En Fragmente İndeksler</CardTitle>\n              <CardDescription>Bakım gerektiren indeksler</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3\">\n                {topFragmentedIndexes.map((index, i) => (\n                  <div key={i} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                    <div>\n                      <div className=\"font-medium\">{index.IndexName}</div>\n                      <div className=\"text-sm text-gray-600\">{index.TableName}</div>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"font-medium\">%{index.FragmentationPercent.toFixed(1)}</div>\n                      <Badge \n                        variant={index.Recommendation === 'REBUILD' ? 'destructive' : 'secondary'}\n                        className=\"text-xs\"\n                      >\n                        {index.Recommendation}\n                      </Badge>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Öneriler */}\n        <TabsContent value=\"recommendations\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Performans İyileştirme Önerileri</CardTitle>\n              <CardDescription>Analiz sonuçlarına dayalı öneriler</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {/* İndeks Önerileri */}\n                {analysisResult.indexFragmentation.length > 0 && (\n                  <div className=\"p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                    <h4 className=\"font-medium text-yellow-800 mb-2\">🔧 İndeks Bakımı</h4>\n                    <p className=\"text-sm text-yellow-700\">\n                      {analysisResult.indexFragmentation.filter(i => i.Recommendation === 'REBUILD').length} indeks rebuild,{' '}\n                      {analysisResult.indexFragmentation.filter(i => i.Recommendation === 'REORGANIZE').length} indeks reorganize gerekiyor.\n                    </p>\n                  </div>\n                )}\n\n                {/* Yavaş Sorgu Önerileri */}\n                {analysisResult.slowQueries.length > 10 && (\n                  <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n                    <h4 className=\"font-medium text-red-800 mb-2\">🐌 Sorgu Optimizasyonu</h4>\n                    <p className=\"text-sm text-red-700\">\n                      {analysisResult.slowQueries.length} yavaş sorgu tespit edildi. \n                      En yavaş sorgu ortalama {topSlowQueries[0]?.avg_elapsed_time_seconds.toFixed(2)} saniye sürüyor.\n                    </p>\n                  </div>\n                )}\n\n                {/* Disk Alanı Önerileri */}\n                {analysisResult.tableSizes.some(t => t.UnusedSpaceKB > t.UsedSpaceKB * 0.3) && (\n                  <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n                    <h4 className=\"font-medium text-blue-800 mb-2\">💾 Disk Alanı</h4>\n                    <p className=\"text-sm text-blue-700\">\n                      Bazı tablolarda önemli miktarda boş alan var. Shrink işlemi düşünülebilir.\n                    </p>\n                  </div>\n                )}\n\n                {/* Yedekleme Önerileri */}\n                {analysisResult.backupHistory.length === 0 && (\n                  <div className=\"p-4 bg-orange-50 border border-orange-200 rounded-lg\">\n                    <h4 className=\"font-medium text-orange-800 mb-2\">💾 Yedekleme</h4>\n                    <p className=\"text-sm text-orange-700\">\n                      Son yedekleme bilgisi bulunamadı. Düzenli yedekleme planı oluşturun.\n                    </p>\n                  </div>\n                )}\n\n                {/* Genel Öneriler */}\n                <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n                  <h4 className=\"font-medium text-green-800 mb-2\">✅ Genel Öneriler</h4>\n                  <ul className=\"text-sm text-green-700 space-y-1\">\n                    <li>• İstatistikleri düzenli olarak güncelleyin</li>\n                    <li>• Bakım planlarını otomatikleştirin</li>\n                    <li>• Performans izlemeyi sürekli yapın</li>\n                    <li>• Kritik sorguları optimize edin</li>\n                  </ul>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5766, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Progress } from '@/components/ui/progress';\nimport { Separator } from '@/components/ui/separator';\nimport DatabaseConnection from '@/components/database-connection';\nimport AnalysisDashboard from '@/components/analysis-dashboard';\nimport MaintenancePanel from '@/components/maintenance-panel';\nimport PerformanceCharts from '@/components/performance-charts';\nimport { DatabaseConnectionStatus, PerformanceAnalysisResult } from '@/lib/db/types';\n\nexport default function PerformanceOptimizationTool() {\n  const [connectionStatus, setConnectionStatus] = useState<DatabaseConnectionStatus>({\n    isConnected: false\n  });\n  const [analysisResult, setAnalysisResult] = useState<PerformanceAnalysisResult | null>(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [activeTab, setActiveTab] = useState('connection');\n\n  // Bağlantı durumunu kontrol et\n  useEffect(() => {\n    checkConnectionStatus();\n  }, []);\n\n  const checkConnectionStatus = async () => {\n    try {\n      const response = await fetch('/api/analyze');\n      const result = await response.json();\n      \n      if (result.success && result.data) {\n        setConnectionStatus(result.data);\n        if (result.data.isConnected) {\n          setActiveTab('analysis');\n        }\n      }\n    } catch (error) {\n      console.error('Bağlantı durumu kontrol edilemedi:', error);\n    }\n  };\n\n  const handleConnectionSuccess = (status: DatabaseConnectionStatus) => {\n    setConnectionStatus(status);\n    setActiveTab('analysis');\n  };\n\n  const handleAnalysisComplete = (result: PerformanceAnalysisResult) => {\n    setAnalysisResult(result);\n  };\n\n  const getPerformanceScoreColor = (score: number) => {\n    if (score >= 80) return 'text-green-600';\n    if (score >= 60) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  const getPerformanceScoreText = (score: number) => {\n    if (score >= 80) return 'Mükemmel';\n    if (score >= 60) return 'İyi';\n    if (score >= 40) return 'Orta';\n    return 'Zayıf';\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-6\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">\n                Performans Optimizasyon Aracı\n              </h1>\n              <p className=\"text-gray-600 mt-1\">\n                LOGO Yazılım ürünleri için SQL Server performans analizi ve optimizasyon\n              </p>\n            </div>\n            \n            {/* Bağlantı durumu */}\n            <div className=\"flex items-center space-x-4\">\n              {connectionStatus.isConnected && (\n                <div className=\"text-right\">\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                    <span className=\"text-sm text-gray-600\">Bağlı</span>\n                  </div>\n                  <div className=\"text-xs text-gray-500\">\n                    {connectionStatus.serverName} / {connectionStatus.databaseName}\n                  </div>\n                </div>\n              )}\n              \n              {analysisResult && (\n                <Card className=\"w-48\">\n                  <CardContent className=\"p-4\">\n                    <div className=\"text-center\">\n                      <div className=\"text-2xl font-bold mb-1\">\n                        <span className={getPerformanceScoreColor(analysisResult.performanceScore)}>\n                          %{analysisResult.performanceScore}\n                        </span>\n                      </div>\n                      <div className=\"text-sm text-gray-600\">\n                        Performans Skoru\n                      </div>\n                      <Badge \n                        variant={analysisResult.performanceScore >= 60 ? \"default\" : \"destructive\"}\n                        className=\"mt-2\"\n                      >\n                        {getPerformanceScoreText(analysisResult.performanceScore)}\n                      </Badge>\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-6\">\n          <TabsList className=\"grid w-full grid-cols-4\">\n            <TabsTrigger value=\"connection\" className=\"flex items-center space-x-2\">\n              <span>Bağlantı</span>\n            </TabsTrigger>\n            <TabsTrigger \n              value=\"analysis\" \n              disabled={!connectionStatus.isConnected}\n              className=\"flex items-center space-x-2\"\n            >\n              <span>Analiz</span>\n            </TabsTrigger>\n            <TabsTrigger \n              value=\"maintenance\" \n              disabled={!connectionStatus.isConnected}\n              className=\"flex items-center space-x-2\"\n            >\n              <span>Bakım</span>\n            </TabsTrigger>\n            <TabsTrigger \n              value=\"reports\" \n              disabled={!analysisResult}\n              className=\"flex items-center space-x-2\"\n            >\n              <span>Raporlar</span>\n            </TabsTrigger>\n          </TabsList>\n\n          {/* Bağlantı Sekmesi */}\n          <TabsContent value=\"connection\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Veritabanı Bağlantısı</CardTitle>\n                <CardDescription>\n                  SQL Server veritabanınıza bağlanmak için gerekli bilgileri girin\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <DatabaseConnection \n                  onConnectionSuccess={handleConnectionSuccess}\n                  currentStatus={connectionStatus}\n                />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Analiz Sekmesi */}\n          <TabsContent value=\"analysis\" className=\"space-y-6\">\n            {connectionStatus.isConnected ? (\n              <AnalysisDashboard \n                onAnalysisComplete={handleAnalysisComplete}\n                analysisResult={analysisResult}\n              />\n            ) : (\n              <Alert>\n                <AlertDescription>\n                  Analiz yapmak için önce veritabanı bağlantısını kurun.\n                </AlertDescription>\n              </Alert>\n            )}\n          </TabsContent>\n\n          {/* Bakım Sekmesi */}\n          <TabsContent value=\"maintenance\" className=\"space-y-6\">\n            {connectionStatus.isConnected ? (\n              <MaintenancePanel analysisResult={analysisResult} />\n            ) : (\n              <Alert>\n                <AlertDescription>\n                  Bakım işlemleri için önce veritabanı bağlantısını kurun.\n                </AlertDescription>\n              </Alert>\n            )}\n          </TabsContent>\n\n          {/* Raporlar Sekmesi */}\n          <TabsContent value=\"reports\" className=\"space-y-6\">\n            {analysisResult ? (\n              <PerformanceCharts analysisResult={analysisResult} />\n            ) : (\n              <Alert>\n                <AlertDescription>\n                  Raporları görüntülemek için önce performans analizi yapın.\n                </AlertDescription>\n              </Alert>\n            )}\n          </TabsContent>\n        </Tabs>\n      </div>\n\n      {/* Footer */}\n      <footer className=\"bg-white border-t border-gray-200 mt-12\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"text-center text-sm text-gray-500\">\n            <p>LOGO Yazılım Performans Optimizasyon Aracı</p>\n            <p className=\"mt-1\">\n              SQL Server veritabanlarınızın performansını izleyin ve optimize edin\n            </p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}